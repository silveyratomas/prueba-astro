---
import Layout from "../layouts/Layout.astro";
const fmt = (c: number) => "$ " + (c / 100).toFixed(2);
---
<Layout title="Comprar ‚Äì TuTienda">
  <h1 class="text-3xl font-bold mb-6 text-[var(--text)]">Finalizar compra</h1>

  <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
    <!-- üßæ Formulario -->
    <form
      class="lg:col-span-2 bg-[var(--surface)] border border-[var(--card-border)] rounded-xl shadow-sm p-6 space-y-5"
      onsubmit="event.preventDefault(); alert('Formulario enviado (demo).');"
    >
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
          <label class="block text-sm font-medium mb-1 text-[var(--text)]" for="nombre">Nombre del cliente</label>
          <input class="w-full rounded-lg border border-[var(--card-border)] px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[var(--accent)]"
                 id="nombre" name="nombre" required />
        </div>
        <div>
          <label class="block text-sm font-medium mb-1 text-[var(--text)]" for="telefono">Tel√©fono</label>
          <input class="w-full rounded-lg border border-[var(--card-border)] px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[var(--accent)]"
                 id="telefono" name="telefono" type="tel" required />
        </div>
        <div class="md:col-span-2">
          <label class="block text-sm font-medium mb-1 text-[var(--text)]" for="direccion">Direcci√≥n</label>
          <input class="w-full rounded-lg border border-[var(--card-border)] px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[var(--accent)]"
                 id="direccion" name="direccion" required />
        </div>
        <div>
          <label class="block text-sm font-medium mb-1 text-[var(--text)]" for="email">E-mail</label>
          <input class="w-full rounded-lg border border-[var(--card-border)] px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[var(--accent)]"
                 id="email" name="email" type="email" required />
        </div>
        <div>
          <label class="block text-sm font-medium mb-1 text-[var(--text)]" for="pago">Medio de pago</label>
          <select class="w-full rounded-lg border border-[var(--card-border)] px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[var(--accent)]"
                  id="pago" name="pago" required>
            <option value="">Seleccionar‚Ä¶</option>
            <option>Tarjeta</option>
            <option>Transferencia</option>
            <option>Mercado Pago</option>
          </select>
        </div>
      </div>

      <!-- se completa con el carrito para enviar al backend luego -->
      <input type="hidden" name="cart_json" id="cart_json" />

      <div class="flex justify-end gap-3 pt-2">
        <!-- Bot√≥n de Limpiar -->
        <button type="reset"
          class="inline-flex items-center rounded-lg px-4 py-2 border border-[var(--card-border)] text-[var(--text)] hover:bg-[var(--surface)] transition-colors">
          Limpiar
        </button>

        <!-- Bot√≥n de Confirmar Compra -->
        <button type="submit"
          class="inline-flex items-center rounded-lg px-4 py-2 bg-[var(--accent)] text-white hover:bg-[var(--accent-hover)] hover:text-white transition-all">
          Confirmar compra
        </button>
      </div>

    </form>

    <!-- üß∫ Resumen de carrito -->
    <aside class="lg:col-span-1">
      <div class="bg-[var(--surface)] border border-[var(--card-border)] rounded-xl shadow-sm p-6 sticky top-6">
        <h2 class="text-xl font-semibold mb-4 text-[var(--text)]">Tu carrito</h2>

        <div id="emptyCart" class="text-[var(--muted)]">No hay productos en el carrito todav√≠a.</div>

        <div id="cartBox" class="hidden">
          <table class="w-full text-sm">
            <thead class="text-[var(--muted)]">
              <tr>
                <th class="pb-2 text-left">Producto</th>
                <th class="pb-2 text-left">Precio unit.</th>
                <th class="pb-2 text-center">Cant.</th>
                <th class="pb-2 text-right">Subtotal</th>
              </tr>
            </thead>
            <tbody id="cartRows" class="align-top divide-y divide-gray-100"></tbody>
            <tfoot>
              <tr>
                <td colspan="3" class="pt-3 text-right font-semibold">Total</td>
                <td class="pt-3 text-right font-extrabold" id="cartTotal">$ 0,00</td>
              </tr>
            </tfoot>
          </table>

          <div class="mt-3 text-right">
            <button type="button" id="clearBtn" class="text-xs text-[var(--muted)] hover:text-red-600">
              Vaciar carrito
            </button>
          </div>
        </div>
      </div>
    </aside>
  </div>

  <!-- üëá Script robusto: espera al DOM y valida nodos -->
  <script>
  // @ts-nocheck
  document.addEventListener('DOMContentLoaded', () => {
    const rowsEl     = document.getElementById('cartRows');
    const totalEl    = document.getElementById('cartTotal');
    const emptyEl    = document.getElementById('emptyCart');
    const boxEl      = document.getElementById('cartBox');
    const inputJson  = document.getElementById('cart_json');
    const clearBtn   = document.getElementById('clearBtn');

    if (!rowsEl || !totalEl || !emptyEl || !boxEl || !inputJson || !clearBtn) return;

    const fmt = (c) => new Intl.NumberFormat('es-AR', {
        style: 'currency',
        currency: 'ARS'
    }).format(c);

    const cartApi = (window.tpCart && typeof window.tpCart.getCart === 'function')
        ? window.tpCart
        : { getCart: () => [], clearCart: () => {} };

    // üëâ Orden: por nombre de producto (A‚ÜíZ)
    const cart = (cartApi.getCart() || []).slice().sort((a,b) =>
        a.title.localeCompare(b.title, 'es', { sensitivity: 'base' })
    );

    if (cart.length) {
        emptyEl.classList.add('hidden');
        boxEl.classList.remove('hidden');
        inputJson.value = JSON.stringify(cart);

        rowsEl.innerHTML = cart.map(i => `
        <tr class="h-12">
            <td class="py-2 pr-3">
            <div class="font-medium">${i.title}</div>
            </td>
            <td class="py-2 text-right text-gray-600">${fmt(i.price)}</td>
            <td class="py-2 text-center">${i.qty}</td>
            <td class="py-2 text-right font-medium">${fmt(i.price * i.qty)}</td>
        </tr>
        `).join('');

        const total = cart.reduce((a, i) => a + i.price * i.qty, 0);
        totalEl.textContent = fmt(total);
    }

    clearBtn.addEventListener('click', () => { cartApi.clearCart(); location.reload(); });
  });
  </script>

</Layout>
